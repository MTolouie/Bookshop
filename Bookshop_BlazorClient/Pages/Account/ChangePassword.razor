@page "/Account/ChangePassword"
@inject IJSRuntime _jsRuntime
@inject IAccountRepository _accountRepository
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorage

<HeadContent>
    <link rel="stylesheet" href="css/Dashboard.css" type="text/css">
</HeadContent>







<div class="container">
    <div class="col-md-12 mt-5 mb-5">
        <center>
            <section>
                <EditForm Model="ChangePassDTO" OnValidSubmit="UpdatePassword" OnInvalidSubmit="InvalidSubmit">

                    <div class="col-lg-6 text-center">

                        <div class="card">
                            <div class="card-header">Change Password Form</div>

                            <div class="card-body card-block">

                                <div class="form-group">
                                    <DataAnnotationsValidator></DataAnnotationsValidator>
                                    <div style="color:red;">
                                        <ValidationSummary></ValidationSummary>
                                    </div>
                                    <input @bind-value="ChangePassDTO.Email" type="hidden">
                                </div>
                                <div class="form-group">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">Old Password</span>
                                        </div>
                                        <input @bind-value="ChangePassDTO.OldPassword" type="password" class="form-control" id="login-password" placeholder="Enter Old Password">
                                        <div class="input-group-prepend"> <span class="input-group-text"><i class="fa fa-asterisk"></i></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">New Password</span>
                                        </div>
                                        <input @bind-value="ChangePassDTO.NewPassword" type="password" class="form-control" id="login-password" placeholder="Enter New Password">
                                        <div class="input-group-prepend"> <span class="input-group-text"><i class="fa fa-asterisk"></i></span></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">Confirm New Password</span>
                                        </div>
                                        <input @bind-value="ChangePassDTO.ConfirmNewPassword" type="password" class="form-control" id="login-password" placeholder="Confirm New Password">
                                        <div class="input-group-prepend"> <span class="input-group-text"><i class="fa fa-asterisk"></i></span></div>
                                    </div>
                                </div>


                                <div class="form-actions form-group">
                                    <button class="btn btn-outline-warning btn-block" type="submit">Change Password</button>
                                </div>
                                <div class="form-actions form-group">
                                    <a class="btn btn-outline-info btn-block" href="/Dashboard/Profile">Get Back</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </EditForm>

            </section>
        </center>
    </div>
</div>


@code {
    public ChangePasswordDTO ChangePassDTO { get; set; } = new();

    public UserDTO User { get; set; } = new();

    public string Token { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //var authenticationState = await AuthenticationState;
        User = await _localStorage.GetItemAsync<UserDTO>(SD.Local_UserDetails);
        Token = await _localStorage.GetItemAsync<string>(SD.Local_Token);
        if (User is null || Token is null)
        {
            _navigationManager.NavigateTo("/Account/Login");
            return;
        }
        ChangePassDTO.Email = User.Email;
    }

    private async Task UpdatePassword()
    {
        var IsInvalid = await InvalidSubmit();

        if (IsInvalid)
            await _jsRuntime.ToastrError("Form Is Invalid");

        var IsChanged = await _accountRepository.ChangePassword(ChangePassDTO, Token);

        if (IsChanged)
        {
            await _jsRuntime.ToastrSuccess("Password Change Successfuly");
            _navigationManager.NavigateTo("/Dashboard/Profile");
            return;
        }
        else
        {
            await _jsRuntime.ToastrError("Something Went Wrong");
            return;
        }
    }

    private async Task<bool> InvalidSubmit()
    {
        if (ChangePassDTO.Email is null)
        {
            await _jsRuntime.ToastrError("Email Cannot Be Null");
            return true;
        }

        if (ChangePassDTO.OldPassword is null)
        {
            await _jsRuntime.ToastrError("Old Password Cannot Be Null");
            return true;
        }

        if (ChangePassDTO.NewPassword is null)
        {
            await _jsRuntime.ToastrError("New Password Cannot Be Null");
            return true;
        }

        if (ChangePassDTO.ConfirmNewPassword is null)
        {
            await _jsRuntime.ToastrError("Confirm New Password Cannot Be Null");
            return true;
        }
        return false;

    }
}
