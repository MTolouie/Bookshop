@page "/Dashboard/Addresses"
@inject IAddressRepository _addressRepository
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorage
@inject IHashids _hashId
@inject IJSRuntime _jsRuntime
@attribute [Authorize(Roles = SD.Role_Customer)]

<HeadContent>
    <link rel="stylesheet" href="css/Dashboard.css" type="text/css">
</HeadContent>

<div class="container">
    <div class="main-body">

        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="main-breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">User Profile</li>
            </ol>
        </nav>
        <!-- /Breadcrumb -->

        <div class="row gutters-sm">
            <div class="col-md-4 mb-3">
                <DashboardSideNav UserName="@User.FullName"></DashboardSideNav>
                <DashboardInfoNav></DashboardInfoNav>
            </div>
            <div class="col-md-8">
                <h2>Addresses</h2>
                <div class="card mb-3">
                    <div class="card-body">
                        <a class="btn btn-outline-info mb-2" href="/Dashboard/ChangeAddressStatus">Make default shipping address</a>
                        <a class="btn btn-outline-success mb-2" href="/Dashboard/AddAddress">Add Address</a>
                        @if (addressDTOs is not null && addressDTOs.Any())
                        {
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Action</th>
                                        <th>Address Title</th>
                                        <th>Province</th>
                                        <th>Town</th>
                                        <th>Phone Number</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var address in addressDTOs)
                                    {
                                        <tr>
                                            <td>

                                                <a href="/Dashboard/EditAddress/@_hashId.Encode(address.AddressId)">Edit</a>
                                                <a  @onclick="()=>DeleteAddress(address.AddressId)">Delete</a>
                                            </td>
                                            <td>@address.AddressTitle</td>
                                            <td>@address.PROVINCE</td>
                                            <td>@address.Town</td>
                                            <td>@address.PhoneNo</td>
                                            <td>
                                                <div class="gl-text">
                                                    @if (address.IsSelected)
                                                    {
                                                        <p>Default Shipping Address</p>
                                                    }
                                                    else
                                                    {
                                                        <p>Not Selected</p>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="alert alert-danger text-center">
                                <h2>No Content</h2>
                            </div>
                        }
                    </div>
                </div>



            </div>
        </div>

    </div>
</div>





@code {
    public UserDTO User { get; set; } = new();

    public IEnumerable<AddressDTO> addressDTOs { get; set; } = new List<AddressDTO>();
    //[CascadingParameter]
    //public Task<AuthenticationState> AuthenticationState{ get; set; }

    public string Token { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //var authenticationState = await AuthenticationState;
        User = await _localStorage.GetItemAsync<UserDTO>(SD.Local_UserDetails);
        Token = await _localStorage.GetItemAsync<string>(SD.Local_Token);
        if (User is null || Token is null)
        {
            _navigationManager.NavigateTo("/Account/Login");
            return;
        }

        addressDTOs = await _addressRepository.GetUserAddresses(SD.AddressApiPath, User.Id, Token);

    }


    private async Task DeleteAddress(int addressId)
    {

        var IsOk = await _jsRuntime.InvokeAsync<bool>("confirm", "Are You Sure");

        if (IsOk)
        {
            var IsDeleted = await _addressRepository.DeleteAsync(SD.AddressApiPath, addressId, Token);
            if (IsDeleted)
            {
                await _jsRuntime.ToastrSuccess("Deleted Successfuly");
                addressDTOs = await _addressRepository.GetUserAddresses(SD.AddressApiPath, User.Id, Token);
                return;
            }
            else
            {
                await _jsRuntime.ToastrError("Something Is Wrong");
                return;
            }
        }

    }
}
